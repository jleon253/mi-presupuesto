{"version":3,"sources":["Components/Error/Error.jsx","Components/Pregunta/Pregunta.jsx","Components/Formulario/Formulario.jsx","Components/Gastos/Gasto.jsx","Components/Gastos/ListaGastos.jsx","Helper.js","Components/Control/ControlGastos.jsx","App.js","serviceWorker.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","setMostrar","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","setGasto","setCrearGasto","nombre","setNombre","valor","setValor","setError","trim","gasto","id","shortid","generate","Gasto","ListaGastos","gastos","map","key","revisarPresupuesto","presupuesto","restante","ControlGastos","App","mostrar","setGastos","crearGasto","useEffect","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5b2af788.chunk.js","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types'\n\nconst Error = ({mensaje}) => {\n  return (\n    <p className=\"alert alert-danger error\">\n      { mensaje }\n    </p>\n  );\n};\n\nError.propTypes = {\n  mensaje: PropTypes.string.isRequired\n}\n\nexport default Error;","import React, { Fragment, useState } from 'react'\nimport Error from '../Error/Error'\n\nimport PropTypes from 'prop-types'\n\nconst Pregunta = ({guardarPresupuesto, guardarRestante, setMostrar}) => {\n\tconst [cantidad, guardarCantidad] = useState(0)\n\tconst [error, guardarError] = useState(false)\n\n\tconst definirPresupuesto = (e) => {\n\t\tguardarCantidad(parseInt(e.target.value))\n\t}\n\n\tconst agregarPresupuesto = (e) => {\n\t\te.preventDefault()\n\t\tif (cantidad < 1 || isNaN(cantidad)) {\n\t\t\tguardarError(true)\n\t\t\treturn\n\t\t}\n    guardarError(false)\n    guardarPresupuesto(cantidad)\n    guardarRestante(cantidad)\n    setMostrar(false)\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<h2>Coloca tu presupuesto</h2>\n\t\t\t<form onSubmit={agregarPresupuesto}>\n\t\t\t\t{error ? <Error mensaje=\"El presupuesto es incorrecto\" /> : null}\n\t\t\t\t<input\n\t\t\t\t\ttype='number'\n\t\t\t\t\tclassName='u-full-width'\n\t\t\t\t\tplaceholder='500000'\n\t\t\t\t\tonChange={definirPresupuesto}\n\t\t\t\t/>\n\t\t\t\t<button type='submit' className='button-primary u-full-width'>\n\t\t\t\t\tDefinir presupuesto\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</Fragment>\n\t)\n}\n\nPregunta.propTypes = {\n  guardarPresupuesto: PropTypes.func.isRequired,\n  guardarRestante: PropTypes.func.isRequired,\n  setMostrar: PropTypes.func.isRequired\n}\n\nexport default Pregunta\n","import React, { useState } from 'react'\nimport Error from '../Error/Error'\nimport shortid from 'shortid'\n\nimport PropTypes from 'prop-types'\n\nconst Formulario = ({ setGasto, setCrearGasto }) => {\n\tconst [nombre, setNombre] = useState('')\n\tconst [valor, setValor] = useState(0)\n\tconst [error, setError] = useState(false)\n\n\tconst agregarGasto = (e) => {\n\t\te.preventDefault()\n\t\tif (valor < 1 || isNaN(valor) || nombre.trim() === '') {\n\t\t\tsetError(true)\n\t\t\treturn\n\t\t}\n\t\tsetError(false)\n\t\tconst gasto = {\n\t\t\tnombre,\n\t\t\tvalor,\n\t\t\tid: shortid.generate(),\n\t\t}\n    setGasto(gasto)\n    setCrearGasto(true)\n    setNombre('')\n    setValor(0)\n\t}\n\n\treturn (\n\t\t<form onSubmit={agregarGasto}>\n\t\t\t<h2>Agrega tus gastos aquÃ­:</h2>\n\t\t\t{error ? <Error mensaje='Revisa los valores ingresados' /> : null}\n\t\t\t<div className='campo'>\n\t\t\t\t<label>Nombre gasto:</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tclassName='u-full-width'\n\t\t\t\t\tplaceholder='Almuerzo'\n\t\t\t\t\tvalue={nombre}\n\t\t\t\t\tonChange={(e) => setNombre(e.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='campo'>\n\t\t\t\t<label>Valor gasto:</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='number'\n\t\t\t\t\tclassName='u-full-width'\n\t\t\t\t\tplaceholder='10000'\n\t\t\t\t\tvalue={valor}\n\t\t\t\t\tonChange={(e) => setValor(e.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<button type='submit' className='button-primary u-full-width'>\n\t\t\t\tAgregar gasto\n\t\t\t</button>\n\t\t</form>\n\t)\n}\n\nFormulario.propTypes = {\n  setGasto: PropTypes.func.isRequired,\n  setCrearGasto: PropTypes.func.isRequired\n}\n\nexport default Formulario\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nconst Gasto = ({ gasto }) => {\n\treturn (\n\t\t<li>\n\t\t\t<p>\n\t\t\t\t{gasto.nombre}\n\t\t\t\t<span className='gasto'>{gasto.valor}</span>\n\t\t\t</p>\n\t\t</li>\n\t)\n}\n\nGasto.propTypes = {\n  gasto: PropTypes.object.isRequired\n}\n\nexport default Gasto\n","import React from 'react'\nimport Gasto from './Gasto'\n\nimport PropTypes from 'prop-types'\n\nconst ListaGastos = ({ gastos }) => {\n\treturn (\n    <div className='gastos-realizados'>\n      <h2>Lista de tus gastos</h2>\n\t\t\t{gastos.map((gasto) => (\n\t\t\t\t<Gasto key={gasto.id} gasto={gasto} />\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nListaGastos.propTypes = {\n  gastos: PropTypes.array.isRequired\n}\n\nexport default ListaGastos\n","export const revisarPresupuesto = (presupuesto, restante) => {\n  let clase\n\tif (presupuesto / 4 > restante) {\n\t\tclase = 'alert alert-danger'\n\t} else if (presupuesto / 2 > restante) {\n\t\tclase = 'alert alert-warning'\n\t} else {\n\t\tclase = 'alert alert-success'\n\t}\n\treturn clase\n}\n","import React, {Fragment} from 'react'\nimport {revisarPresupuesto} from '../../Helper'\n\nimport PropTypes from 'prop-types'\n\nconst ControlGastos = ({ presupuesto, restante }) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='one-half column'>\n\t\t\t\t\t<div className='alert alert-primary'>Presupuesto: ${presupuesto}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='one-half column'>\n\t\t\t\t\t<div className={revisarPresupuesto(presupuesto, restante)}>Restante: ${restante}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t)\n}\n\nControlGastos.propTypes = {\n  presupuesto: PropTypes.number.isRequired,\n  restante: PropTypes.number.isRequired\n}\n\nexport default ControlGastos\n","import React, { useState, useEffect } from 'react'\nimport Pregunta from './Components/Pregunta/Pregunta'\nimport Formulario from './Components/Formulario/Formulario'\nimport ListaGastos from './Components/Gastos/ListaGastos'\nimport ControlGastos from './Components/Control/ControlGastos'\n\nfunction App() {\n\tconst [presupuesto, guardarPresupuesto] = useState(0)\n\tconst [restante, guardarRestante] = useState(0)\n\tconst [mostrar, setMostrar] = useState(true)\n\tconst [gastos, setGastos] = useState([])\n\tconst [gasto, setGasto] = useState({})\n\tconst [crearGasto, setCrearGasto] = useState(false)\n\n\t// actualiza el restante\n\tuseEffect(() => {\n\t\tif (crearGasto) {\n      setGastos([...gastos, gasto])\n      guardarRestante( restante - gasto.valor)\n\t\t\tsetCrearGasto(false)\n\t\t}\n\t}, [gasto, gastos, crearGasto, restante])\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<header>\n\t\t\t\t<h1>Gasto Semanal</h1>\n\t\t\t\t<div className='contenido-principal contenido'>\n\t\t\t\t\t{mostrar ? (\n\t\t\t\t\t\t<Pregunta\n\t\t\t\t\t\t\tguardarPresupuesto={guardarPresupuesto}\n\t\t\t\t\t\t\tguardarRestante={guardarRestante}\n\t\t\t\t\t\t\tsetMostrar={setMostrar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t<div className='one-half column'>\n\t\t\t\t\t\t\t\t<Formulario setGasto={setGasto} setCrearGasto={setCrearGasto} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='one-half column'>\n\t\t\t\t\t\t\t\t<ListaGastos gastos={gastos} />\n\t\t\t\t\t\t\t\t<ControlGastos presupuesto={presupuesto} restante={restante} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}